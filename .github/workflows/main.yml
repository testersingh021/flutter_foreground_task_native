name: Publish Package

#on: push
#  release: [published]
on:
  push:
    branches: [ master ]

jobs:
  publish:

    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v2 # required!
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '2.8.0'
          channel: 'stable'
      - run: flutter --version
#      - name: copy credential
      - name: Setup Pub Credentials
        shell: bash
        env:
            PUB_DEV_PUBLISH_ACCESS_TOKEN: ${{ secrets.PUB_DEV_PUBLISH_ACCESS_TOKEN }}
            PUB_DEV_PUBLISH_REFRESH_TOKEN: ${{ secrets.PUB_DEV_PUBLISH_REFRESH_TOKEN }}
            PUB_DEV_PUBLISH_TOKEN_ENDPOINT: ${{ secrets.PUB_DEV_PUBLISH_TOKEN_ENDPOINT }}
            PUB_DEV_PUBLISH_EXPIRATION: ${{ secrets.PUB_DEV_PUBLISH_EXPIRATION }}
        run: |
           sh ./pub_login.sh
#        run: echo ${{secrets.CREDENTIAL_JSON}} > /opt/hostedtoolcache/flutter/1.9.1-hotfix.2-stable/x64/.pub-cache/credentials.json
#        env:
#           credential: ${{ secrets.CREDENTIAL_JSON }}

      - name: publish
        run: |
          flutter pub publish -f

#      - name: '>> Dart package <<'
#        uses: k-paxian/dart-package-publisher@master
#        with:
#          accessToken: ${{ secrets.OAUTH_ACCESS_TOKEN }}
#          refreshToken: ${{ secrets.OAUTH_REFRESH_TOKEN }}

#    steps:
#      - name: Checkout
#        uses: actions/checkout@v3.0.1
#      - name: Publish
#        uses: sakebook/actions-flutter-pub-publisher@v1.4.0
#        with:
#          credential: ${{ secrets.CREDENTIAL_JSON }}
#          flutter_package: false
#          skip_test: true
#          dry_run: true

#jobs:
#  build:
#    runs-on: ubuntu-latest
#
#    steps:
#      - uses: actions/checkout@v1
#      - name: Install Flutter
#        uses: subosito/flutter-action@v1
#        with:
#          channel: 'dev'
#      - name: Install dependencies
#        run: flutter pub get
      #      - name: Analyze
      #        run: flutter analyze
      #      - name: Run tests
#      #        run: flutter test
#      - name: Dry run publish
#        run: |
#            echo "Copy credentials"
#            mkdir -p ~/.pub-cache
#            echo "$credential" > ~/.pub-cache/credentials.json
#            echo "Run pub publish --dry-run"
#            flutter pub publish --dry-run
#
#        env:
#            credential: ${{ secrets.CREDENTIAL_JSON }}

#      - name: Setup Pub Credentials
#        shell: bash
#
#
#
#        env:
#          PUB_DEV_PUBLISH_ACCESS_TOKEN: ${{ secrets.PUB_DEV_PUBLISH_ACCESS_TOKEN }}
#          PUB_DEV_PUBLISH_REFRESH_TOKEN: ${{ secrets.PUB_DEV_PUBLISH_REFRESH_TOKEN }}
#          PUB_DEV_PUBLISH_TOKEN_ENDPOINT: ${{ secrets.PUB_DEV_PUBLISH_TOKEN_ENDPOINT }}
#          PUB_DEV_PUBLISH_EXPIRATION: ${{ secrets.PUB_DEV_PUBLISH_EXPIRATION }}
#        run: |
#          sh ./pub_login.sh
#

#      - name: Check Publish Warnings
##        run: dart pub publish --dry-run
#      - name: Publish Package
#        run: flutter pub publish -f
#name: Build and Release APK
#on: push
#jobs:
#  hosting:
#    name: Deploy Website
#    runs-on: ubuntu-latest
#    steps:
#      # Checkout Repository
#      - uses: actions/checkout@v1
#
#      # Install Flutter command
#      - uses: subosito/flutter-action@v1
#        with:
#          channel: 'dev'
#
#      # Build Website
#      - name: Build Website
#        run: |
#          flutter config --enable-web
#          flutter pub get
#          flutter build web --release --no-sound-null-safety
#        working-directory: ./
#
#      # Deploy Firebase Hosting
#      - name: Deploy Firebase Hosting
#        uses: w9jds/firebase-action@master
#        with:
#          args: deploy --only hosting:flutternotify-68609
#        env:
#          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
#          PROJECT_PATH: ./